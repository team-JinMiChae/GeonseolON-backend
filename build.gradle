plugins {
    id 'java'
    id 'org.springframework.boot' version '3.4.4'
    id 'io.spring.dependency-management' version '1.1.7'
    id 'com.google.cloud.tools.jib' version '3.4.5'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

jib {
    from {
        image = "eclipse-temurin:21-jre"
    }
    to {
        image = 'chaechae121/jinmichae:latest'
        auth {
            username = System.getenv("DOCKER_USERNAME") ?: ""
            password = System.getenv("DOCKER_PASSWORD") ?: ""
        }
    }
    container{
        environment = Map.of(
                "TZ", "Asia/Seoul"
        )
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    //Spring security
    implementation 'org.springframework.boot:spring-boot-starter-security'

    // Test
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
    // https://mvnrepository.com/artifact/org.jsoup/jsoup
    implementation 'org.jsoup:jsoup:1.19.1'

    // Azure
    implementation 'com.azure:azure-ai-inference:1.0.0-beta.1'

    // Database
    /*runtimeOnly 'org.postgresql:postgresql'*/
    implementation 'com.oracle.database.jdbc:ojdbc11:23.8.0.25.04'
    implementation 'org.hibernate.orm:hibernate-vector:6.6.13.Final'
    implementation 'org.hibernate:hibernate-spatial:6.6.13.Final'

    // Redis
    implementation 'org.redisson:redisson-spring-boot-starter:3.46.0'

    // Swagger
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.6.0'
}

tasks.named('test') {
    useJUnitPlatform()
}
